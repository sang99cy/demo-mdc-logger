x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<date>\d{4}-\d{2}-\d{2}) (?P<time>\d{2}:\d{2}:\d{2}.\d{3}) (?P<message>(?s:.*))$$'

version: '3'

services:
  loki:
    image: grafana/loki:3.0.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:v2.51.2
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.4.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "14251:14250"
      - "4317:4317"
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    logging: *default-logging

  jaeger:
    image: jaegertracing/all-in-one:1.41
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "14269:14269"
      - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector:0.63.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4318:4317"
      - "55680:55680"

  my-spring-boot-app:
    image: my-spring-boot-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/hypertrace-agent/hypertrace-agent.jar
      - HT_SERVICE_NAME=auto-demo-mdc-logger
#      - HT_REPORTING_ENDPOINT=http://otel-collector:4317
      - HT_REPORTING_ENDPOINT=http://tempo:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
#      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318
      - OTEL_SERVICE_NAME=auto-demo-mdc-logger
      - OTEL_RESOURCE_ATTRIBUTES=compose_service=my-spring-boot-app # add custom resource attribute to Span for Grafana Trace to Logs feature
      - OTEL_METRICS_EXPORTER=none # disable metrics exporter
      - MANAGEMENT_METRICS_TAGS_APPLICATION=my-spring-boot-app
#    depends_on:
#      - otel-collector
#      - jaeger
    logging: *default-logging

  pyroscope:
    hostname: pyroscope
    container_name: pyroscope
    image: "pyroscope/pyroscope:latest"
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "4040:4040"
    command:
      - "server"
    volumes:
      - ./etc/grafana/pyroscope-local-config.yaml:/etc/pyroscope/server.yaml